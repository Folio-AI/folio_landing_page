// import './css/style.css'

// import { Inter } from 'next/font/google'

// import Header from '@/components/ui/header'

// const inter = Inter({
//   subsets: ['latin'],
//   variable: '--font-inter',
//   display: 'swap'
// })

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode
// }) {
//   return (
//     <html lang="en">
//       <body className={`${inter.variable} font-inter antialiased bg-white text-gray-900 tracking-tight`}>
//         <div className="flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip">
//           <Header />
//           {children}
//         </div>
//       </body>
//     </html>
//   )
// }

import './css/style.css'

import Header from '@/components/ui/header'

import { Inter, Inter_Tight } from 'next/font/google'

import SessionProvider from '@/components/SessionProvider';
import { getServerSession } from 'next-auth';

import NextUIProvider from '@/components/NextUIProvider';
import ThemeProvider from "@/components/next-themes";

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

const inter_tight = Inter_Tight({
  weight: ['500', '600', '700'],
  style: ['normal', 'italic'],
  subsets: ['latin'],
  variable: '--font-inter-tight',
  display: 'swap'
})

// export const metadata = {
//   title: 'Folio AI',
//   description: '',
// }

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const session = await getServerSession();

  return (
    <html lang="en" className="light">
      <body className={`${inter.variable} font-inter antialiased bg-white text-gray-900 tracking-tight`}>
        <div className="flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip">
           <SessionProvider 
            session={session}
            // Re-fetches session when window is focused
            refetchOnWindowFocus={true}>
              {/* <ThemeProvider defaultTheme="dark" attribute="class"> */}
                <NextUIProvider>
                  {children}
                </NextUIProvider>
              {/* </ThemeProvider>  */}
            </SessionProvider>
         </div>
      </body>
    </html>
  )
}
